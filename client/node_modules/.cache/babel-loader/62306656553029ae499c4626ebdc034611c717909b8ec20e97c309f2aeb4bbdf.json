{"ast":null,"code":"var _jsxFileName = \"/home/aathik/Desktop/swp edit/Sport-Management-System-Project/client/src/user/ResetPass.jsx\";\n// ResetPassword.js\nimport React from 'react';\nimport { Form, Input, Button, Typography } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst ResetPassword = () => {\n  const onFinish = values => {\n    console.log('Received values:', values);\n    // Implement logic to reset password\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash d-flex justify-content-center align-items-center vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-3 rounded w-md-50 w-lg-25\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"resetPasswordForm\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"New Password\",\n          name: \"newPassword\",\n          rules: [{\n            required: true,\n            message: 'Please input your new password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            placeholder: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          dependencies: ['newPassword'],\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: 'Please confirm your password!'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('newPassword') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error('The two passwords do not match!'));\n            }\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              width: '100%'\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","Form","Input","Button","Typography","jsxDEV","_jsxDEV","Title","ResetPassword","onFinish","values","console","log","className","children","level","fileName","_jsxFileName","lineNumber","columnNumber","name","initialValues","remember","style","marginTop","Item","label","rules","required","message","Password","placeholder","dependencies","hasFeedback","getFieldValue","validator","_","value","Promise","resolve","reject","Error","type","htmlType","width","_c","$RefreshReg$"],"sources":["/home/aathik/Desktop/swp edit/Sport-Management-System-Project/client/src/user/ResetPass.jsx"],"sourcesContent":["// ResetPassword.js\nimport React from 'react';\nimport { Form, Input, Button, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst ResetPassword = () => {\n  const onFinish = (values) => {\n    console.log('Received values:', values);\n    // Implement logic to reset password\n  };\n\n  return (\n    <div className=\"dash d-flex justify-content-center align-items-center vh-100\">\n    <div className=\"bg-white p-3 rounded w-md-50 w-lg-25\">\n      <center><Title level={2}>Reset Password</Title></center>\n      <Form\n        name=\"resetPasswordForm\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        style={{ marginTop: '20px' }}\n      >\n        <Form.Item\n          label=\"New Password\"\n          name=\"newPassword\"\n          rules={[{ required: true, message: 'Please input your new password!' }]}\n        >\n          <Input.Password placeholder=\"New Password\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          dependencies={['newPassword']}\n          hasFeedback\n          rules={[\n            { required: true, message: 'Please confirm your password!' },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('newPassword') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('The two passwords do not match!'));\n              },\n            }),\n          ]}\n        >\n          <Input.Password placeholder=\"Confirm Password\" />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" style={{ width: '100%' }}>\n            Reset\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}